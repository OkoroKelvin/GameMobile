{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StartGameScreen from \"./screens/StartGameScreen\";\nimport GameScreen from \"./screens/GameScreen\";\nimport GameOverScreen from \"./screens/GameOverScreen\";\nimport Colors from \"./constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameIsOver = _useState4[0],\n      setGameIsOver = _useState4[1];\n\n  var _useFonts = useFonts({\n    'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n\n  function gameOverHandler() {\n    setGameIsOver(true);\n  }\n\n  var screen = _jsx(StartGameScreen, {\n    onPickNumber: pickedNumberHandler\n  });\n\n  if (userNumber) {\n    screen = _jsx(GameScreen, {\n      userNumber: userNumber,\n      onGameOver: gameOverHandler\n    });\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = _jsx(GameOverScreen, {});\n  }\n\n  return _jsx(LinearGradient, {\n    colors: [Colors.primary700, Colors.accent500],\n    style: styles.rootScreen,\n    children: _jsx(ImageBackground, {\n      source: require(\"./assets/image/background.png\"),\n      resizeMode: \"cover\",\n      style: styles.rootScreen,\n      imageStyle: styles.backgroundImage,\n      children: _jsx(SafeAreaView, {\n        style: styles.rootScreen,\n        children: screen\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});","map":{"version":3,"names":["useState","LinearGradient","StartGameScreen","GameScreen","GameOverScreen","Colors","App","userNumber","setUserNumber","gameIsOver","setGameIsOver","useFonts","require","fontsLoaded","pickedNumberHandler","pickedNumber","gameOverHandler","screen","primary700","accent500","styles","rootScreen","backgroundImage","StyleSheet","create","flex","opacity"],"sources":["C:/GameMobile/App.js"],"sourcesContent":["import { StyleSheet, ImageBackground, SafeAreaView } from 'react-native';\nimport { useState } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StartGameScreen from './screens/StartGameScreen';\nimport GameScreen from './screens/GameScreen';\nimport GameOverScreen from './screens/GameOverScreen';\nimport Colors from './constants/colors';\n\n\nexport default function App() {\n\n  const [userNumber, setUserNumber] = useState();\n  const [gameIsOver, setGameIsOver] = useState(true);\n\n  const [fontsLoaded] = useFonts({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n\n  function pickedNumberHandler(pickedNumber) {\n    setUserNumber(pickedNumber);\n    setGameIsOver(false);\n  }\n\n  function gameOverHandler() {\n    setGameIsOver(true);\n  }\n\n  let screen = <StartGameScreen onPickNumber={pickedNumberHandler} />;\n\n \n  if (userNumber) {\n    screen = (\n      <GameScreen userNumber={userNumber} onGameOver={gameOverHandler} />\n    );\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = <GameOverScreen />;\n  }\n  \n  return (\n    <LinearGradient\n      colors={[Colors.primary700, Colors.accent500]}\n      style={styles.rootScreen}\n    >\n      <ImageBackground\n        source={require('./assets/image/background.png')}\n        resizeMode=\"cover\"\n        style={styles.rootScreen}\n        imageStyle={styles.backgroundImage}\n      >\n        <SafeAreaView style={styles.rootScreen}>{screen}</SafeAreaView>\n      </ImageBackground>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  rootScreen: {\n    flex: 1,\n  },\n  backgroundImage: {\n    opacity: 0.15\n  }\n});\n"],"mappings":";;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,OAAOC,MAAP;;AAGA,eAAe,SAASC,GAAT,GAAe;EAE5B,gBAAoCN,QAAQ,EAA5C;EAAA;EAAA,IAAOO,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCR,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB;;EAEA,gBAAsBC,QAAQ,CAAC;IAC7B,aAAaC,OAAO,uCADS;IAE7B,kBAAkBA,OAAO;EAFI,CAAD,CAA9B;EAAA;EAAA,IAAOC,WAAP;;EAKA,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO,KAAC,UAAD,KAAP;EACD;;EAGD,SAASC,mBAAT,CAA6BC,YAA7B,EAA2C;IACzCP,aAAa,CAACO,YAAD,CAAb;IACAL,aAAa,CAAC,KAAD,CAAb;EACD;;EAED,SAASM,eAAT,GAA2B;IACzBN,aAAa,CAAC,IAAD,CAAb;EACD;;EAED,IAAIO,MAAM,GAAG,KAAC,eAAD;IAAiB,YAAY,EAAEH;EAA/B,EAAb;;EAGA,IAAIP,UAAJ,EAAgB;IACdU,MAAM,GACJ,KAAC,UAAD;MAAY,UAAU,EAAEV,UAAxB;MAAoC,UAAU,EAAES;IAAhD,EADF;EAGD;;EAED,IAAIP,UAAU,IAAIF,UAAlB,EAA8B;IAC5BU,MAAM,GAAG,KAAC,cAAD,KAAT;EACD;;EAED,OACE,KAAC,cAAD;IACE,MAAM,EAAE,CAACZ,MAAM,CAACa,UAAR,EAAoBb,MAAM,CAACc,SAA3B,CADV;IAEE,KAAK,EAAEC,MAAM,CAACC,UAFhB;IAAA,UAIE,KAAC,eAAD;MACE,MAAM,EAAET,OAAO,iCADjB;MAEE,UAAU,EAAC,OAFb;MAGE,KAAK,EAAEQ,MAAM,CAACC,UAHhB;MAIE,UAAU,EAAED,MAAM,CAACE,eAJrB;MAAA,UAME,KAAC,YAAD;QAAc,KAAK,EAAEF,MAAM,CAACC,UAA5B;QAAA,UAAyCJ;MAAzC;IANF;EAJF,EADF;AAeD;AAED,IAAMG,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,UAAU,EAAE;IACVI,IAAI,EAAE;EADI,CADmB;EAI/BH,eAAe,EAAE;IACfI,OAAO,EAAE;EADM;AAJc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}