{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver();\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < userNumber || direction === 'greater' && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        children: [_jsx(PrimaryButton, {\n          onPress: nextGuessHandler.bind(this, 'lower'),\n          children: _jsx(Ionicons, {\n            name: \"md-remove\",\n            size: 24,\n            color: \"white\"\n          })\n        }), _jsx(PrimaryButton, {\n          onPress: nextGuessHandler.bind(this, 'greater'),\n          children: _jsx(Ionicons, {\n            name: \"md-add\",\n            size: 24,\n            color: \"white\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","useEffect","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","styles","screen","bind","StyleSheet","create","flex","padding","instructionText","marginBottom","buttonsContainer","flexDirection","buttonContainer"],"sources":["C:/GameMobile/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Alert } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport NumberContainer from '../components/game/NumberContainer';\r\nimport Card from '../components/ui/Card';\r\nimport InstructionText from '../components/ui/InstructionText';\r\n\r\nimport PrimaryButton from '../components/ui/PrimaryButton';\r\nimport Title from '../components/ui/Title';\r\n\r\nfunction generateRandomBetween(min, max, exclude) {\r\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  if (rndNum === exclude) {\r\n    return generateRandomBetween(min, max, exclude);\r\n  } else {\r\n    return rndNum;\r\n  }\r\n}\r\n\r\nlet minBoundary = 1;\r\nlet maxBoundary = 100;\r\n\r\n\r\nfunction GameScreen({ userNumber, onGameOver }) {\r\n    const initialGuess = generateRandomBetween(1,100,userNumber);\r\n    const [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n\r\n      useEffect(() => {\r\n        if (currentGuess === userNumber) {\r\n          onGameOver();\r\n        }\r\n      }, [currentGuess, userNumber, onGameOver]);\r\n    \r\n\r\n      function nextGuessHandler(direction) {\r\n        // direction => 'lower', 'greater'\r\n        if (\r\n          (direction === 'lower' && currentGuess < userNumber) ||\r\n          (direction === 'greater' && currentGuess > userNumber)\r\n        ) {\r\n          Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [\r\n            { text: 'Sorry!', style: 'cancel' },\r\n          ]);\r\n          return;\r\n        }\r\n    \r\n        if (direction === 'lower') {\r\n          maxBoundary = currentGuess;\r\n        } else {\r\n          minBoundary = currentGuess + 1;\r\n        }\r\n    \r\n        const newRndNumber = generateRandomBetween(\r\n          minBoundary,\r\n          maxBoundary,\r\n          currentGuess\r\n        );\r\n        setCurrentGuess(newRndNumber);\r\n      }\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Title>Opponent's Guess</Title>\r\n      <NumberContainer>{currentGuess}</NumberContainer>\r\n      <View>\r\n        <Text>Higher or lower?</Text>\r\n        <View>\r\n          <PrimaryButton onPress={nextGuessHandler.bind(this, 'lower')}>\r\n          <Ionicons name=\"md-remove\" size={24} color=\"white\" />\r\n          </PrimaryButton>\r\n          <PrimaryButton onPress={nextGuessHandler.bind(this, 'greater')}>\r\n          <Ionicons name=\"md-add\" size={24} color=\"white\" />\r\n          </PrimaryButton>\r\n        </View>\r\n      </View>\r\n      {/* <View>LOG ROUNDS</View> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 24,\r\n      },\r\n      instructionText: {\r\n        marginBottom: 12,\r\n      },\r\n      buttonsContainer: {\r\n        flexDirection: 'row',\r\n      },\r\n      buttonContainer: {\r\n        flex: 1,\r\n      },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}